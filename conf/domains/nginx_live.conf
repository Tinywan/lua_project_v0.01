lua_shared_dict live_ngx_cache 128m; # 注意该缓存是所有nginx work process所共享的
lua_shared_dict cache_lock 100k;    # lock for cache
lua_shared_dict live_room 100k;     # live_room
# server live
server {
    listen       8088;
    server_name  127.0.0.1;
    resolver 8.8.8.8 114.114.114.114 valid=3600s;
    charset utf8;
    default_type text/html;
    index  chatroom.html index.htm;

    #加载直播模板
    set $project_path /mnt/hgfs/Linux-Share/Lua/;  # 定义项目根目录，如项目放在/home/www/
    set $template_root "/mnt/hgfs/Linux-Share/Lua/lua_project_v0.01/template/live";

    #url映射
    location ~* "^/live/(\d+)\.html$" {
        rewrite /live/(.*)    http://127.0.0.1:8088/$1 permanent;
    }

    #--------------------------------------------------------正式----------------------------------------------------
    # 入口文件 Lua 的调用
    location ~ ^/live/(\d+)$ {
        lua_code_cache on;
        set $id $1;
        content_by_lua_file "${project_path}lua_project_v0.01/application/controller/LiveRedisCacheController.lua";

    }

    # 请求后端服务器的API接口查询数据，接口返回数据格式为Json格式
    location ~ /openapi/(.*) {
        internal;
        proxy_pass http://sewise.www.com;
    }

    # websocket Server
    location /ws {
        lua_code_cache off;
        content_by_lua_file "${project_path}lua_project_v0.01/application/controller/WebSocketController.lua";
    }

    # websocket Server
    location /lua_ws {
        lua_code_cache off;
        content_by_lua_file "${project_path}lua_project_v0.01/application/controller/WebSocketRedisController.lua";
    }

    #配置Nginx动静分离，定义的静态页面直接从Nginx发布目录读取。html 文件配置路径如:<script src="/video-js/videojs-contrib-hls.min.js"></script>
    location ~ .*\.(html|htm|gif|jpg|jpeg|bmp|png|ico|txt|js|css)$
    {
        root /mnt/hgfs/Linux-Share/Lua/lua_project_v0.01/public;
        #expires定义用户浏览器缓存的时间为7天，如果静态页面不常更新，可以设置更长，这样可以节省带宽和缓解服务器的压力
        expires      7d;
    }
    #--------------------------------------------------------正式----------------------------------------------------
    location = /json_table {
        content_by_lua_file "${project_path}lua_project_v0.01/application/demo/json_table.lua";
    }

    location = /cookie {
         default_type 'text/html';
        lua_code_cache off;
        #content_by_lua_file "${project_path}lua_project_v0.01/application/ngx_lua_API/cookie.lua";
        content_by_lua_block {
            ngx.header["Set-Cookie"] = "session=tinywan12312; Path=/; Expires="..ngx.cookie_time(ngx.time() + 86400)
            ngx.say("orangleliu")
        }
    }

    location /sub {
     content_by_lua_block {
         local id = ngx.req.get_uri_args()['id']
         ngx.ctx.data = "MYSQL DATA " .. id
         ngx.say(ngx.ctx.data)
     }
    }

    location /main {
     content_by_lua_block {
         local res = ngx.location.capture("/sub")
         ngx.print(res.body)
      }
    }

    #  测试模板显示mysql 数据库信息
    location /live_html {
        lua_code_cache off;
        content_by_lua_file "${project_path}lua_project_v0.01/application/controller/LiveController.lua";
    }

    #   聊天室配置
    location /live_redis {
        lua_code_cache off;
        content_by_lua_file "${project_path}lua_project_v0.01/application/controller/test_redis.lua";
    }



}
